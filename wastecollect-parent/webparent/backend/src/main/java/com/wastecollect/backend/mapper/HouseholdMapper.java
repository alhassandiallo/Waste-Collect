// Example: HouseholdMapper.java
package com.wastecollect.backend.mapper;

import com.wastecollect.common.dto.HouseholdCreationDTO;
import com.wastecollect.common.dto.HouseholdUpdateDTO;
import com.wastecollect.common.dto.HouseholdDTO;
import com.wastecollect.common.models.Household;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import org.mapstruct.NullValuePropertyMappingStrategy;

@Mapper(componentModel = "spring", nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
public interface HouseholdMapper {

    // Map HouseholdCreationDTO to Household entity for creation
    @Mapping(target = "id", ignore = true) // ID is generated by DB
    @Mapping(target = "serviceRequests", ignore = true) // Not part of creation
    Household toEntity(HouseholdCreationDTO dto);

    // Map HouseholdUpdateDTO to existing Household entity for updates
    @Mapping(target = "id", ignore = true) // ID cannot be updated
    @Mapping(target = "serviceRequests", ignore = true) // Not part of update
    // Important: if your Household entity has a password field, you must ignore it here
    // @Mapping(target = "password", ignore = true)
    void updateHouseholdFromDto(HouseholdUpdateDTO dto, @MappingTarget Household entity);

    // Map Household entity to HouseholdDTO for display
    // Ensure password is NOT mapped to DTO if it exists in entity (should be excluded)
    @Mapping(target = "password", ignore = true) // Ensure password is never exposed in DTO
    HouseholdDTO toDto(Household entity);

    // You would add similar mappers for ServiceRequest, Collector, Payment, etc.
}